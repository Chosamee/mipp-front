events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name aimipp.com;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # 정적 파일에 대한 캐싱 정책 설정
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location / {
            try_files $uri $uri/ @prerender;
        }

        location @prerender {
            if ($request_uri !~ /$) {
                return 301 $scheme://$host$request_uri/;
            }

            # Prerender 조건 설정
            set $prerender 0;
            if ($http_user_agent ~* "(googlebot|bingbot|yandex|facebookexternalhit|twitterbot|linkedinbot|kakaotalk-scrap)") {
                set $prerender 1;
            }
            if ($args ~ "_escaped_fragment_") {
                set $prerender 1;
            }
            if ($http_user_agent ~ "Prerender") {
                set $prerender 0;
            }

            # Prerender가 필요한 경우 내부적으로 지정된 location으로 리다이렉트
            if ($prerender = 1) {
                rewrite ^ /prerender_redirect break;
            }

            rewrite ^ /index.html break;

        }

        # 내부 Prerender 리다이렉션을 위한 location
        location /prerender_redirect {
            internal;
            proxy_pass https://service.prerender.io;
            proxy_set_header X-Prerender-Token ${PRERENDER_TOKEN};
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
        }
    }
}
